---
# Manage the Seeed Odyssey J1405 SBC server built into the Hab.
#
# The server connects to the hab environmental components
# via USB, GPIO, I2C and SPI. Application containers handling
# those components are hosted by nomad.
#
# This play sets up the server and container hosting environment.

# Mount storage

- name: Mount 10TB spinning storage to /mnt/archive 
  ansible.posix.mount:
    path: /mnt/archive
    src: /dev/disk/by-id/scsi-SATA_WDC_WD101KFBX-68_1EJA449Z-part1
    fstype: ext4
    state: mounted

- name: Mount 2TB sata ssd storage to /mnt/scratch
  ansible.posix.mount:
    path: /mnt/scratch
    src: /dev/disk/by-id/scsi-SATA_WDC_WDS200T2B0B_1902B9800300-part1
    fstype: ext4
    state: mounted

# Install packages

- name: Installing apt packages
  ansible.builtin.apt:
    name: "{{item}}"
  loop:
    - chrony
    - docker.io
    - influxdb
    - postgresql
    - samba

# Publish file shares

- name: Configure Samba shares
  ansible.builtin.copy:
    src: files/etc/samba/smb.conf
    dest: /etc/samba/smb.conf
  notify:
    - Restart samba

# Request SSL certificate from certbot

# - name: Set certbot credentials
#   ansible.builtin.copy:
#     dest: /etc/certbot-creds.ini
#     content: "dns_digitalocean_token = {{digitalocean_api_token}}"
#     mode: 0600

# - name: Check for issues *.hab.mju.io certificate
#   ansible.builtin.stat:
#     path: /etc/letsencrypt/live/hab.mju.io/fullchain.pem
#   register: certificate

# - name: Request *.hab.mju.io certificate from letsencrypt
#   ansible.builtin.shell: |
#     certbot certonly --dns-digitalocean --dns-digitalocean-credentials /etc/certbot-creds.ini -d {{letsencrypt_domain}} -d *.{{letsencrypt_domain}} -m {{letsencrypt_email}} --agree-tos -n
#   when: not certificate.stat.exists

# Install Traefik ingress

- name: Check if traefik is installed
  ansible.builtin.stat:
    path: /usr/local/bin/traefik
  register: traefik_bin

- name: Install the traefik binary
  ansible.builtin.unarchive:
    remote_src: yes
    dest: /usr/local/bin
    src: "https://github.com/traefik/traefik/releases/download/v2.10.1/traefik_v2.10.1_linux_amd64.tar.gz"
    include: traefik
  when: not traefik_bin.stat.exists

- name: Create traefik configuration directory
  ansible.builtin.file:
    path: /etc/traefik
    state: directory

- name: Create traefik log and lib directory
  ansible.builtin.file:
    path: "{{item}}"
    state: directory
    owner: root
    group: traefik
    mode: 0775
  loop:
    - /var/log/traefik
    - /var/lib/traefik

- name: Create traefik user
  ansible.builtin.user:
    name: traefik
    system: yes

- name: Configure traefik
  ansible.builtin.template:
    src: templates/etc/traefik/traefik.yaml.j2
    dest: /etc/traefik/traefik.yaml
  notify: Restart traefik

- name: Configure traefik static routes
  ansible.builtin.copy:
    src: files/etc/traefik/traefik-routes.yaml
    dest: /etc/traefik/traefik-routes.yaml
  notify: Restart traefik

- name: Configure traefik systemd service
  ansible.builtin.template:
    src: templates/etc/systemd/system/traefik.service.j2
    dest: /etc/systemd/system/traefik.service

- name: Enable and start traefik
  ansible.builtin.systemd:
    name: traefik
    state: started
    enabled: yes

# Install Hashicorp nomad

- name: Add Hashicorp apt repository key
  ansible.builtin.copy:
    src: files/usr/share/keyrings/hashicorp.gpg
    dest: /usr/share/keyrings/hashicorp.gpg
  register: hashicorp_apt_key

- name: Add Hashicorp apt repository
  ansible.builtin.copy:
    src: files/etc/apt/sources.list.d/hashicorp.list
    dest: /etc/apt/sources.list.d/hashicorp.list
  register: hashicorp_apt_repo

- name: Update apt index
  ansible.builtin.apt:
    update_cache: yes
  when: hashicorp_apt_key.changed or hashicorp_apt_repo.changed

- name: Install Hashicorp services
  ansible.builtin.apt:
    name: "{{item}}"
  loop:
    - nomad

# Configure the Hashicorp services

- name: Configure Hashicorp services
  ansible.builtin.copy:
    src: "files/etc/{{item}}"
    dest: "/etc/{{item}}"
  loop:
    - nomad.d/nomad.hcl

# Enable and start Hashicorp services

- name: Enable and start Hashicorp services
  ansible.builtin.systemd:
    name: "{{item}}"
    state: started
    enabled: yes
  loop:
    - nomad
